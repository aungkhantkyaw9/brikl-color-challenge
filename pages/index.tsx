import type { NextPage } from "next";
import Head from "next/head";
import { useEffect, useState } from "react";
import axios from "axios";
import styled from "styled-components";

type ColorFormat = {
  type: string;
  color_code: Array<number>;
};

interface Props {
  colorCode: ColorFormat;
}

const Home: NextPage = () => {
  const [colorSwatches, setColorSwatches] = useState<Array<ColorFormat>>([]);
  const [errorMessage, setErrorMessage] = useState<String>("");

  useEffect(() => {
    (async () => {
      generateColorSwatches();
    })();
  }, []);

  const generateColorSwatches = () => {
    axios
      .get("/api/generate-color-swatch", {
        params: {
          type: "brgb",
          max_range: 100,
          byte_range: 3,
        },
      })
      .then((response) => {
        setColorSwatches([...response.data.color]);
        setErrorMessage("");
      })
      .catch((error) => {
        setErrorMessage(error.response.data.error_message);
      });
  };

  return (
    <Container>
      <Head>
        <title>Brikl Color Challenge</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Main>
        <Grid>
          {colorSwatches.length > 0 &&
            colorSwatches.map((color, idx) => {
              return (
                <Card key={idx}>
                  <ColorSwatch colorCode={color}></ColorSwatch>
                  <ColorLabel>
                    {color.type === "hsl" &&
                      `${color.type}(${color.color_code[0]}, ${color.color_code[1]}%, ${color.color_code[2]}%)`}
                    {color.type !== "hsl" &&
                      `${color.type}(${color.color_code.join(", ")})`}
                  </ColorLabel>
                </Card>
              );
            })}
        </Grid>
        {errorMessage !== "" && (
          <ErrorContainer>
            <span>{errorMessage}</span>
          </ErrorContainer>
        )}

        <Button onClick={generateColorSwatches}>Generate</Button>
      </Main>

      <Footer>
        Powered by Brikl <FooterImage src="./logo.webp"></FooterImage>
      </Footer>
    </Container>
  );
};

export default Home;

const Container = styled.div`
  padding: 0;
`;

const Main = styled.main`
  min-height: 100vh;
  padding: 4rem 2rem;
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
`;

const Grid = styled.div`
  display: grid;
  width: 100%;
  @media (max-width: 600px) {
    gap: 2.5rem;
  }
  @media (min-width: 600px) {
    grid-template-columns: repeat(2, 1fr);
    gap: 2.5rem;
  }
  @media (min-width: 900px) {
    grid-template-columns: repeat(5, 1fr);
  }
  @media (min-width: 1200px) {
    gap: 2rem;
  }
`;

const Card = styled.div`
  width: 100%;
  height: 7rem;
`;

const ColorSwatch = styled.div<Props>`
  border: 1px solid #eaeaea;
  border-radius: 0.625rem;
  transition: color 0.15s ease, border-color 0.15s ease;
  width: 100%;
  height: 7rem;
  background: ${(props) =>
    props.colorCode &&
    (props.colorCode.type === "hsl"
      ? `${props.colorCode.type}(${props.colorCode.color_code[0]} ${props.colorCode.color_code[1]}% ${props.colorCode.color_code[2]}%)`
      : `${props.colorCode.type}(${props.colorCode.color_code.join(",")})`)};
`;

const ColorLabel = styled.label`
  font-size: 1rem;
  font-weight: 700;
`;

const Button = styled.button`
  margin: 5rem 0 0 0;
  width: 10%;
  line-height: 2.5rem;
  color: #fff;
  font-size: 1rem;
  border: 0.063rem solid #4a3faf;
  background-image: linear-gradient(to bottom, #b1aaf6, #7c71ee);
  border-radius: 0.625rem;
  -webkit-border-radius: 0.625rem;
  -moz-border-radius: 0.625rem;
  box-shadow: 0 0.063rem 0 rgba(255, 255, 255, 0.5) inset,
    0 -0.063rem 0 rgba(255, 255, 255, 0.1) inset, 0 0.125rem 0 #4e4695,
    0 0.25rem 0.125rem rgba(0, 0, 0, 0.5);
  cursor: pointer;
  &:focus {
    outline: none;
  }
  &:hover {
    background: #b1aaf6;
    background-image: -webkit-linear-gradient(top, #7c71ee, #b1aaf6);
  }
  &:active {
    text-shadow: -0.063rem -0.063rem 0 #4e4695;
    border: 0.063rem solid #4a3faf;
    background-image: linear-gradient(to bottom, #584bdd, #584bdd);
  }
`;

const ErrorContainer = styled.div`
  width: 40%;
  height: 30vh;
  background: #ff171799;
  display: flex;
  justify-content: center;
  align-items: center;
  color: #fff;
  border-radius: 0.5rem;
  font-size: 1.2rem;
`;

const Footer = styled.footer`
  display: flex;
  flex: 1;
  padding: 2rem 0;
  border-top: 1px solid #eaeaea;
  justify-content: center;
  align-items: center;
  background-color: #f3f3f3;
`;

const FooterImage = styled.img`
  width: 1.25rem;
  margin-left: 0.625rem;
`;
